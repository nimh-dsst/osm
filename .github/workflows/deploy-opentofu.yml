name: Deploy OpenTofu

on:
  push:
    paths:
      - 'web/deploy/terraform/**'

env:
  working_directory_parent: ./web/deploy/terraform
  TF_VAR_AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

permissions:
  id-token: write
  contents: read
  
jobs:
  deploy-shared-resources:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role-shared

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Initialize shared resources
        working-directory: ${{ env.working_directory_parent }}/shared
        run: |
          tofu init

      - name: Plan resources
        working-directory: ${{ env.working_directory_parent }}/shared
        run: |
          tofu plan -no-color -detailed-exitcode
        continue-on-error: true

      - name: Deploy shared resources
        working-directory: ${{ env.working_directory_parent }}/shared
        run: |
          tofu apply -no-color -auto-approve

  deploy-environments:
    runs-on: ubuntu-latest
    if: ${{ always() && !cancelled() && needs.deploy-shared-resources.result == 'success' }}
    strategy:
      matrix:
        environment: [staging, production]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role-shared

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Initialize resources
        working-directory: ${{ env.working_directory_parent }}/${{ matrix.environment }}
        run: |
          tofu init

      - name: Plan resources
        working-directory: ${{ env.working_directory_parent }}/${{ matrix.environment }}
        run: |
          tofu plan -no-color -detailed-exitcode
        continue-on-error: true

      - name: Deploy resources
        working-directory: ${{ env.working_directory_parent }}/${{ matrix.environment }}
        run: |
          tofu apply -no-color -auto-approve
